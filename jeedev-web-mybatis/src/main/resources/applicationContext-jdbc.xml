<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://www.springframework.org/schema/cache   
    http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.2.xsd">
    
	<!-- use context:property-placeholder for one properties file -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">       
    	<property name="location" value="classpath:jdbc-dev.properties"/>
	</bean>
 
 	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
	</bean>
  
      <!-- DataSource Configuration  use druid driver -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.default.url}" />
		<property name="username" value="${jdbc.default.username}" />
		<property name="password" value="${jdbc.default.password}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="50" />
		<property name="maxWait" value="60000"/>
		<property name="filters" value="stat,log4j" />
		<property name="proxyFilters">
        	<list>
            	<ref bean="log-filter"/>
        	</list>
		</property>
		<property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
	</bean>
    <!-- DataSource Configuration  -->
	<!-- 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.default.driverClassName}" />
		<property name="url" value="${jdbc.default.url}" />
		<property name="username" value="${jdbc.default.username}" />
		<property name="password" value="${jdbc.default.password}" />
	</bean>
	 -->
	<!-- JdbcTemplate Configuration -->	  
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
	    <property name="dataSource" ref="dataSource"/>
    </bean>
 
    
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mapper/mybatis-configuration.xml" />
        <property name="mapperLocations">
            <set>
                <value>classpath:mapper/sqlmap/*.xml</value>
            </set>
        </property>
       
       <!-- <property name="typeAliasesSuperType" value="org.jeedevframework.core.common.domain.IDEntity" />-->
       <!-- <property name="typeAliasesPackage" value="org.jeedevframework.app.model"/>-->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="addToConfig" value="true"/>
        <property name="basePackage" value="org.jeedevframework.**.mapper"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
<!-- 
    <aop:aspectj-autoproxy/>
-->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">    
        <property name="configLocation"  value="classpath:ehcache.xml"/>   
    </bean>   
    
    <cache:annotation-driven cache-manager="cacheManager"  proxy-target-class="true"/>  
      
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">    
        <property name="cacheManager"  ref="ehcache"/>    
        <property name="transactionAware" value="true"/>  
    </bean> 
    
    <!-- 用注解方式标注事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"  mode="proxy"/>
 
 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<aop:config expose-proxy="true">
		<aop:pointcut id="txPointcut" expression="execution(* org.jeedevframework.mybatis.service.*Service*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
</beans>